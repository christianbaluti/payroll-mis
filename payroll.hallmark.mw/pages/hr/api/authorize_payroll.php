<?php
include '../backend.php'; // Include your backend file for session/auth checks
include '../../../db2.php'; // Include your database connection file

// Include PHPMailer and any PDF generation library (e.g., TCPDF, FPDF, or a dedicated library)
// require 'path/to/PHPMailer/src/PHPMailer.php';
// require 'path/to/PHPMailer/src/SMTP.php';
// require 'path/to/PHPMailer/src/Exception.php';
// require_once('path/to/tcpdf/tcpdf.php'); // Example for TCPDF

// use PHPMailer\PHPMailer\PHPMailer;
// use PHPMailer\PHPMailer\SMTP;
// use PHPMailer\PHPMailer\Exception;


header('Content-Type: application/json');

// Check if user is logged in (assuming backend.php handles this)
if (!isset($_SESSION['email'])) {
    echo json_encode(['success' => false, 'message' => 'Unauthorized']);
    exit();
}

// Get data from the request body
$data = json_decode(file_get_contents('php://input'), true);

$unique_id = $data['unique_id'] ?? null;

if (!$unique_id) {
    echo json_encode(['success' => false, 'message' => 'Unique ID is required']);
    exit();
}

// Start a transaction
$conn->begin_transaction();

try {
    // 1. Update the status in the payroll table to 'authorized'
    $sql_update_payroll = $conn->prepare("UPDATE payroll SET status = 'authorized' WHERE unique_id = ?");
    $sql_update_payroll->bind_param("s", $unique_id);
    $sql_update_payroll->execute();
    $sql_update_payroll->close();

    // 2. Fetch all employee payslip data associated with this payroll
    $sql_payslips = $conn->prepare("
        SELECT p.*
        FROM payslip p
        JOIN payslip_payroll pp ON p.id = pp.payslip_id
        JOIN payroll pr ON pp.payroll_id = pr.id
        WHERE pr.unique_id = ?
    ");
    $sql_payslips->bind_param("s", $unique_id);
    $sql_payslips->execute();
    $result_payslips = $sql_payslips->get_result();

    $payslips_to_send = [];
    if ($result_payslips->num_rows > 0) {
        while($row = $result_payslips->fetch_assoc()) {
             // Ensure numeric values are treated as numbers
            foreach ($row as $key => $value) {
                if (is_numeric($value)) {
                    $row[$key] = (float) $value;
                }
            }
            $payslips_to_send[] = $row;
        }
    }
    $sql_payslips->close();

    // 3. Generate PDF payslips and send emails
    if (!empty($payslips_to_send)) {
        foreach ($payslips_to_send as $payslip) {
            // --- PDF Generation Placeholder ---
            // This is where you would use a library like TCPDF or FPDF to generate the PDF.
            // Example (using a hypothetical function):
            // $pdf_content = generatePayslipPdf($payslip);
            // $pdf_filename = "payslip_" . $payslip['id'] . ".pdf";
            // file_put_contents($pdf_filename, $pdf_content); // Save PDF temporarily

            // --- Email Sending Placeholder ---
            // This is where you would use a library like PHPMailer to send the email.
            // Example (using a hypothetical function):
            // $email_sent = sendPayslipEmail($payslip['email'], $pdf_filename, $payslip);

            // In a real application, you would handle potential errors in PDF generation and email sending.
            // For this placeholder, we'll just log a message.
            error_log("Placeholder: Generating PDF and sending email for payslip ID: " . $payslip['id'] . " to " . $payslip['email']);

             // Clean up the temporary PDF file
             // if (file_exists($pdf_filename)) {
             //     unlink($pdf_filename);
             // }
        }
         // In a real application, you might want to check if all emails were sent successfully
         // before committing the transaction.
    }


    // Commit the transaction if everything was successful
    $conn->commit();

    echo json_encode(['success' => true, 'message' => 'Payroll authorized and payslips processing.']);

} catch (Exception $e) {
    // Rollback the transaction if any error occurred
    $conn->rollback();
    error_log("Payroll authorization failed: " . $e->getMessage());
    echo json_encode(['success' => false, 'message' => 'An error occurred during payroll authorization.']);
}


$conn->close();

// --- Placeholder Functions for PDF Generation and Email Sending ---

// function generatePayslipPdf($payslip) {
//     // Implement PDF generation logic here
//     // Use a PDF library (TCPDF, FPDF, etc.) to create the payslip document
//     // Return the PDF content as a string or save to a temporary file and return the path
//     return "PDF content for " . $payslip['name']; // Placeholder return
// }

// function sendPayslipEmail($to_email, $pdf_filepath, $payslip_data) {
//     // Implement email sending logic here using PHPMailer or similar
//     // Attach the PDF file generated by generatePayslipPdf
//     // Return true on success, false on failure
//     return true; // Placeholder return
// }

// Function to calculate PAYE (should match frontend logic and update_payslip_data.php)
function calculatePAYE($taxableIncome) {
    $totalTax = 0;
    $remaining = $taxableIncome;

    if ($remaining <= 100000) {
        return 0;
    }
    $remaining -= 100000;

    if ($remaining >= 400000) {
        $totalTax += 400000 * 0.25;
        $remaining -= 400000;
    } else {
        $totalTax += $remaining * 0.25;
        return $totalTax;
    }

    if ($remaining >= 2500000) {
        $totalTax += 2500000 * 0.30;
        $remaining -= 2500000;
    } else {
        $totalTax += $remaining * 0.30;
        return $totalTax;
    }

    $totalTax += $remaining * 0.35;
    return $totalTax;
}
?>
